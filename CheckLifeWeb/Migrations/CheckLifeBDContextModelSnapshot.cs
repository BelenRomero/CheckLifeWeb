// <auto-generated />
using System;
using CheckLifeWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CheckLifeWeb.Migrations
{
    [DbContext(typeof(CheckLifeBDContext))]
    partial class CheckLifeBDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CheckLifeWeb.Models.CalendarioVacuna", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("CalendarioVacuna");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.EstadoVacuna", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("EstadoVacuna");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Login", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<int?>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RolID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Medico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoginID")
                        .HasColumnType("int");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<int?>("NacionalidadID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LoginID");

                    b.HasIndex("NacionalidadID");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Nacionalidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("Nacionalidad");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Paciente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoginID")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoCabeceraID")
                        .HasColumnType("int");

                    b.Property<int?>("NacionalidadID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LoginID");

                    b.HasIndex("MedicoCabeceraID");

                    b.HasIndex("NacionalidadID");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Rol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("ID");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Vacuna", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CalendarioVacunaID")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAplicada")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarcaComercialLote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatriculaEnfermero")
                        .HasColumnType("int");

                    b.Property<int>("PacienteID")
                        .HasColumnType("int");

                    b.Property<string>("SelloFirma")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CalendarioVacunaID");

                    b.HasIndex("EstadoID");

                    b.HasIndex("PacienteID");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Vacunatorio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CUIT")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("LoginID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("ID");

                    b.HasIndex("LoginID");

                    b.ToTable("Centro");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Login", b =>
                {
                    b.HasOne("CheckLifeWeb.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Medico", b =>
                {
                    b.HasOne("CheckLifeWeb.Models.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginID");

                    b.HasOne("CheckLifeWeb.Models.Nacionalidad", "Nacionalidad")
                        .WithMany()
                        .HasForeignKey("NacionalidadID");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Paciente", b =>
                {
                    b.HasOne("CheckLifeWeb.Models.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginID");

                    b.HasOne("CheckLifeWeb.Models.Medico", "MedicoCabecera")
                        .WithMany("Pacientes")
                        .HasForeignKey("MedicoCabeceraID");

                    b.HasOne("CheckLifeWeb.Models.Nacionalidad", "Nacionalidad")
                        .WithMany()
                        .HasForeignKey("NacionalidadID");
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Vacuna", b =>
                {
                    b.HasOne("CheckLifeWeb.Models.CalendarioVacuna", "CalendarioVacuna")
                        .WithMany()
                        .HasForeignKey("CalendarioVacunaID");

                    b.HasOne("CheckLifeWeb.Models.EstadoVacuna", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoID");

                    b.HasOne("CheckLifeWeb.Models.Paciente", "Paciente")
                        .WithMany("Vacunas")
                        .HasForeignKey("PacienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CheckLifeWeb.Models.Vacunatorio", b =>
                {
                    b.HasOne("CheckLifeWeb.Models.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginID");
                });
#pragma warning restore 612, 618
        }
    }
}
